@inherits Mwm.MyQ.Client.Mud.Components.ModelConsumerComponent<TskModel, Tsk>
@using Mwm.MyQ.Client.Mud.Helpers
@using Mwm.MyQ.Client.Service.Models
@using Mwm.MyQ.Client.Service.Store.State.Shared
@using Mwm.MyQ.Domain;
@using Mwm.MyQ.Client.Mud.Components

@if (IsLoading()) {
    <MudText Typo="Typo.h6" Class="m-4">Loading...</MudText>
}
@if (HasErrors()) {
    <MudText Typo="Typo.h6" Class="m-4">Whoops! Looks like an issue occurred loading TskModels</MudText>
} else if (HasValues()) {

    <MudDropContainer T="TskModel" 
                      Items="FilteredTskModels" 
                      ItemDropped="DragStopHandlerAsync"
                      Class="m-1"
                      
                      CanDropClass="mud-border-success" 
                      NoDropClass="mud-border-error"
                      ItemsSelector="@((tm,dropzone) => IsGroupedByCompany ? dropzone == $"{tm.CompanyName}_{tm.Status.ToStr()}" : 
                                                                             dropzone == tm.Status.ToStr())">
        <ChildContent>
            @if (IsGroupedByCompany) {
                foreach (var companyName in CompanyNames) {
                    <MudText Typo="Typo.h4" Class="mb-2 mt-4">@companyName</MudText>
                    <MudGrid Class="d-flex flex-grow-1" Justify="Justify.SpaceEvenly">
                        
                        @foreach (var status in Statuses) {
                            var dropzone = $"{companyName}_{status.ToStr()}";
                            <MudDropZone T="TskModel" 
                                            Style="width:300px;"
                                            Identifier="@dropzone" 
                                            CanDrop="@((tm) => CanChangeToStatus(tm, dropzone))" 
                                            Class="rounded-lg border-2 border-solid mud-border-lines-default p-1 m-1 mt-4 flex-grow-1">
                                <MudText Typo="Typo.h6" Class="mb-4 ml-2 mt-2">@status.ToStr()</MudText>
                            </MudDropZone>
                        }
                    </MudGrid>
                }
            } else {
                <MudGrid Class="d-flex flex-grow-1" Justify="Justify.SpaceEvenly">
                    @foreach (var status in Statuses) {
                        var dropzone = status.ToStr();

                        <MudDropZone T="TskModel" 
                                     Style="width:300px;"
                                     Identifier="@dropzone" 
                                     CanDrop="@((tm) => CanChangeToStatus(tm, dropzone))" 
                                     Class="rounded-lg border-2 border-solid mud-border-lines-default p-1 m-1 mt-4 flex-grow-1">
                            <MudText Typo="Typo.h6" Class="mb-4 ml-2 mt-2">@dropzone</MudText>
                        </MudDropZone>
                    }
                </MudGrid>
            }

        </ChildContent>
        <ItemRenderer>  
            <TskCard TskModel="@context" />
        </ItemRenderer>
    </MudDropContainer>

    <TskDialog />
}
